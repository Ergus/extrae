/* include/gm_config.h.in.  Generated automatically from configure.in by autoheader.  */
/******************************************************************-*-c-*-
 * Myricom GM networking software and documentation                      *
 * Copyright (c) 1996, 1997 by Myricom, Inc.                             *
 * All rights reserved.  See the file `COPYING' for copyright notice.    *
 *************************************************************************/

#ifndef _gm_config_h_
#define _gm_config_h_

#if defined WIN32
#  include "gm_nt_config.h"
#elif defined GM_CPU_lanai
#  include "gm_lanai3_config.h"
#else /* Compiling on dynamically configured host */

/* Define to empty if the keyword does not work.  */
#undef const

/* Define to `int' if <sys/types.h> doesn't define.  */
#undef gid_t

/* Define if you have a working `mmap' system call.  */
#undef HAVE_MMAP

/* Define as __inline if that's what the C compiler calls it.  */
#undef inline

/* Define to `long' if <sys/types.h> doesn't define.  */
#undef off_t

/* Define as the return type of signal handlers (int or void).  */
#undef RETSIGTYPE

/* Define to `unsigned' if <sys/types.h> doesn't define.  */
#undef size_t

/* Define if you have the ANSI C header files.  */
#undef STDC_HEADERS

/* Define to `int' if <sys/types.h> doesn't define.  */
#undef uid_t

/* Define if your processor stores words with the most significant
   byte first (like Motorola and SPARC, unlike Intel and VAX).  */
#undef WORDS_BIGENDIAN

/* The number of bytes in a char.  */
#undef SIZEOF_CHAR

/* The number of bytes in a int.  */
#undef SIZEOF_INT

/* The number of bytes in a short.  */
#undef SIZEOF_SHORT

/* Define if you have the getpagesize function.  */
#undef HAVE_GETPAGESIZE

/* Define if you have the <fcntl.h> header file.  */
#undef HAVE_FCNTL_H

/* Define if you have the <netinet/in.h> header file.  */
#undef HAVE_NETINET_IN_H

/* Define if you have the <strings.h> header file.  */
#undef HAVE_STRINGS_H

/* Define if you have the <sys/errno.h> header file.  */
#undef HAVE_SYS_ERRNO_H

/* Define if you have the <sys/file.h> header file.  */
#undef HAVE_SYS_FILE_H

/* Define if you have the <sys/kmem.h> header file.  */
#undef HAVE_SYS_KMEM_H

/* Define if you have the <sys/mman.h> header file.  */
#undef HAVE_SYS_MMAN_H

/* Define if you have the <sys/time.h> header file.  */
#undef HAVE_SYS_TIME_H

/* Define if you have the <sys/types.h> header file.  */
#undef HAVE_SYS_TYPES_H

/* Define if you have the <unistd.h> header file.  */
#undef HAVE_UNISTD_H

/* Define if you have the gcc library (-lgcc).  */
#undef HAVE_LIBGCC
/*****
 * Begin BOTTOM section of acconfig.h
 *****/

/* What OS are we using to compile the software */

#undef GM_OS_SOLARIS
#undef GM_OS_LINUX
#undef GM_OS_WIN2K

/* What types of LANai interfaces should be supported */

#undef GM_SUPPORT_L4
#undef GM_SUPPORT_L5
#undef GM_SUPPORT_L6

/* What I/O busses should be supported */

#undef GM_SUPPORT_PCI_REV_1
#undef GM_SUPPORT_PCI_REV_2
#undef GM_SUPPORT_SBUS

/* What size pages should be supported */

#undef GM_SUPPORT_4K_PAGES
#undef GM_SUPPORT_8K_PAGES

/* Does this architecture have virtual memory support?  (This host
   definition is needed on the LANai, too.) */

#undef GM_HAVE_VM

/* Should we use the default interrupt handler, or an architecture-specific
   one? */

#undef GM_USE_DEFAULT_INTERRUPT_HANDLER

/* Can this architecture lock user pages? */

#undef GM_CAN_REGISTER_MEMORY

#endif /* Compiling on dynamically configured host */

#if !defined GM_SUPPORT_PCI && defined GM_SUPPORT_PCI_REV_1
#  define GM_SUPPORT_PCI 1
#elif !defined GM_SUPPORT_PCI && defined GM_SUPPORT_PCI_REV_2
#  define GM_SUPPORT_PCI 1
#endif

#endif /* _gm_config_h_ */
